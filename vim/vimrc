"my own config
set encoding=utf-8

set fileencodings=utf-8,gb2312,gbk,gb18030,gk2312
language messages zh_CN.utf-8

" show line number
 set number


" 自动补全
syntax enable
syntax on

" 解决backspace的问题
set backspace=indent,eol,start

" 自动缩进
set ts=4
set expandtab
set autoindent
set cindent

set rtp+=$HOME\.vim\autoload\plug.vim

set tags=./.tags;,.tags

let $VIMPLUGPATH='~/.vim/plugged/'

" vim-plug config
call plug#begin()

Plug 'altercation/vim-colors-solarized' 

Plug 'junegunn/vim-easy-align'
Plug 'skywind3000/quickmenu.vim'

" 异步执行
Plug 'skywind3000/asyncrun.vim'

" 文件树
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

" 生成tag
Plug 'ludovicchabant/vim-gutentags'

" 错误提示
Plug 'dense-analysis/ale',{'on': []}

" 比较
Plug 'mhinz/vim-signify',{'on': []}

" C++高亮
Plug 'octol/vim-cpp-enhanced-highlight'

" 
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" 搜索
Plug 'Yggdroot/LeaderF'  

" doxygen 注释工具
Plug 'vim-scripts/DoxygenToolkit.vim'

" 代码段
Plug  'SirVer/ultisnips'
Plug  'keelii/vim-snippets'

Plug 'vim-airline/vim-airline',{'on': []}
Plug 'vim-airline/vim-airline-themes'

call plug#end()
filetype plugin indent on

augroup load_ycm
            autocmd!
            "autocmd InsertEnter * call plug#load('YouCompleteMe') | autocmd! load_ycm
            autocmd InsertEnter * call plug#load('vim-airline') | autocmd! load_ycm
augroup END

set nocompatible
" scheme
if has('gui_running')
    colorscheme solarized
    set background=light
    let g:solarized_termcolors=256
else
    :hi Pmenu ctermbg=blue
    :hi PmenuSel ctermbg=yellow
    "set background=dark
endif
" colorscheme lucius
"LuciusDark

" ************************************************************
" my own command
" ************************************************************

" 注释
command -range CC :<line1>,<line2>s/^/\/\//
" 解除注释
command -range CU :<line1>,<line2>s/^\/\///

" 浏览器搜索C++Api
command -nargs=1 CPPAPI : ! firefox http://cplusplus.com/search.do?q=<q-args>

" ************************************************************
" DoxygenToolkit
" ************************************************************
 let g:DoxygenToolkit_briefTag_funcName = "yes"

" for C++ style, change the '@' to '\'
" let g:DoxygenToolkit_commentType = "C++"
let g:DoxygenToolkit_briefTag_pre = "\\brief "
let g:DoxygenToolkit_templateParamTag_pre = "\\tparam "
let g:DoxygenToolkit_paramTag_pre = "\\param "
let g:DoxygenToolkit_returnTag = "\\return "
let g:DoxygenToolkit_throwTag_pre = "\\throw " " @exception is also valid
let g:DoxygenToolkit_fileTag = "\\file "
let g:DoxygenToolkit_dateTag = "\\date "
let g:DoxygenToolkit_authorTag = "\\author "
let g:DoxygenToolkit_versionTag = "\\version "
let g:DoxygenToolkit_blockTag = "\\name "
let g:DoxygenToolkit_classTag = "\\class "
let g:DoxygenToolkit_authorName = ""
let g:doxygen_enhanced_color = 1


" ************************************************************
" quickmenu
" ************************************************************
" choose a favorite key to show/hide quickmenu
noremap <silent><F12> :call quickmenu#toggle(0)<cr>

" enable cursorline (L) and cmdline help (H)
let g:quickmenu_options = "HL"

" section1 windows
call g:quickmenu#append('# Windows', '')
call g:quickmenu#append('filetree', 'NERDTreeToggle', '文件树')
call g:quickmenu#append('snippets', 'UltiSnipsEdit', '代码段管理')

" section2 LeaderF
call g:quickmenu#append('# LeaderF', '')
call g:quickmenu#append('MostRecentUsedFile', 'LeaderfMru', '最近常用的文件')
call g:quickmenu#append('Buffer', 'LeaderfBuffer', '在缓冲区内查找')
call g:quickmenu#append('Tag', 'LeaderfTag', '在tags中查找')
call g:quickmenu#append('ListFunction', 'LeaderfFunction', '列出function')

" 

" ************************************************************
" signify
" ************************************************************
let g:signify_vcs_list = ['git','svn']
let g:signify_cursorhold_insert     = 1
let g:signify_cursorhold_normal     = 1
let g:signify_update_on_bufenter    = 0
let g:signify_update_on_focusgained = 1


" ************************************************************
" vim-gutentags
" ************************************************************
" 项目文件的根
let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project']

let g:gutentags_ctags_tagfile = '.tags'

let s:vim_tags = expand('~/.cache/tags')
let g:gutentags_cache_dir = s:vim_tags

let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']
let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']
let g:gutentags_ctags_extra_args += ['--c-kinds=+px']

if !isdirectory(s:vim_tags)
   silent! call mkdir(s:vim_tags, 'p')
endif


" ************************************************************
" ALE
" ************************************************************
let g:ale_linters_explicit = 1
let g:ale_completion_delay = 500
let g:ale_echo_delay = 20
let g:ale_lint_delay = 500
let g:ale_echo_msg_format = '[%linter%] %code: %%s'
let g:ale_lint_on_text_changed = 'normal'
let g:ale_lint_on_insert_leave = 1
let g:airline#extensions#ale#enabled = 1

let g:ale_c_gcc_options = '-Wall -O2 -std=c99'
let g:ale_cpp_gcc_options = '-Wall -O2 -std=c++14'
let g:ale_c_cppcheck_options = ''
let g:ale_cpp_cppcheck_options = ''

let g:ale_sign_error = "\ue009\ue009"
hi! clear SpellBad
hi! clear SpellCap
hi! clear SpellRare
hi! SpellBad gui=undercurl guisp=red
hi! SpellCap gui=undercurl guisp=blue
hi! SpellRare gui=undercurl guisp=magenta

" ************************************************************
" Ultisnips
" ************************************************************

let g:UltiSnipsExpandTrigger="<Tab>"
let g:UltiSnipsJumpForwardTrigger="<Tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-Tab>"
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetDirectories=[$VIMPLUGPATH.'/vim-snippets/UltiSnips']

" ************************************************************
" LeaderF
" ************************************************************

let g:Lf_ShortcutF = '<c-p>'
let g:Lf_ShortcutB = '<m-n>'
noremap <c-n> :LeaderfMru<cr>
noremap <m-p> :LeaderfFunction!<cr>
noremap <m-n> :LeaderfBuffer<cr>
noremap <m-m> :LeaderfTag<cr>
let g:Lf_StlSeparator = { 'left': '', 'right': '', 'font': '' }

let g:Lf_RootMarkers = ['.project', '.root', '.svn', '.git']
let g:Lf_WorkingDirectoryMode = 'Ac'
let g:Lf_WindowHeight = 0.30
let g:Lf_CacheDirectory = expand('~/.vim/cache')
let g:Lf_ShowRelativePath = 0
let g:Lf_HideHelp = 1
let g:Lf_StlColorscheme = 'powerline'
let g:Lf_PreviewResult = {'Function':0, 'BufTag':0}


" ************************************************************
" airline
" ************************************************************
" 设置编码
language messages zh_CN.utf-8 
" 设置语言
set helplang=cn
" 双字节显示
set ambiwidth=double
let laststatus = 2
let g:airline_powerline_fonts = 1   
let g:airline_theme="solarized"
let g:airline_solarized_bg='dark'
" tabline
let g:airline#extensions#tabline#enabled = 1      
let g:airline#extensions#tabline#left_sep = ' '   
let g:airline#extensions#tabline#left_alt_sep = '|'      
let g:airline#extensions#tabline#buffer_nr_show = 1  

nnoremap [b :bp<CR>
nnoremap ]b :bn<CR>
